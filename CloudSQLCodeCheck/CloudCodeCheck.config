<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
	</startup>
	<appSettings>

		<!--CodeCheck standard name-->
		<add key="StandardName" value="SQLStandard"/>

		<!--Directory Names to be excluded from the project-->
		<add key="ExcludeDirectoryList" value="bin,obj,Jobs,Scripts,qa"/>

		<!--Treat all warnings as errors. 
					0 -> False 
					1 -> True				-->
		<add key="TreatWarningsAsErrors" value="0" />

		<!--RegexTimeOut in milliseconds-->
		<add key="RegexTimeOut" value="200"/>

		<!--Suppress warnings format in files (value should be valid regular expression)-->
		<add key="SuppressWarningsFormat" value="--CodeCheck\(SuppressWarnings\):"/>

		<!--SQL Additional Keywords: 
			PUBLIC,IDENTITYCOL,SAVE,CLOSE,SECURITYAUDIT,TRAN,TRANSACTION,OPENQUERY,DUMP,ESCAPE,EXTERNAL,FILLFACTOR,DENY,
			READTEXT,RECONFIGURE,FREETEXT,FREETEXTTABLE,REPLICATION,RESTRICT,GOTO,REVERT,BROWSE,GRANT,REVOKE,BULK,PLAN,
			ROWGUIDCOL,SEMANTICKEYPHRASETABLE,INTERSECT,SEMANTICSIMILARITYTABLE,COMPUTE,SYSTEM_USER,LINENO,CURRENT,DISK,
			SESSION_USER,SETUSER,CONTAINSTABLE,SHUTDOWN,KILL,SOME,STATISTICS,SEMANTICSIMILARITYDETAILSTABLE,RULE,ERRLVL,
			LOAD,TABLESAMPLE,CURRENT_DATE,TEXTSIZE,CURRENT_TIME,NATIONAL,CURRENT_TIMESTAMP,NOCHECK,CURRENT_USER,VARYING,
			CURSOR,DEALLOCATE,TSEQUAL,OPENDATASOURCE,UNPIVOT,TRIGGER,OPENROWSET,UPDATETEXT,DISTRIBUTED,OPENXML,WRITETEXT
		Note: Including all the keywords can increase build time-->

		
		
		<!--Keywords that should be in Lower case-->
		<add key="Keywords_LowerCase" value=""/>
		<!--Keywords prefix and postfix
		e.g.: AND is a keyword but ANDREW is not a keyword. So, a keyword should be postfixed with space (not with a word/digit)-->
		<add key="Keywords_Prefix" value="([^\w\d@]|^)"/>
		<add key="Keywords_Postfix" value="([^\w\d]|$)"/>

		<!-- Error code to be shown for keywords' case-->
		<add key="Keywords_ErrCode" value="SPARK SQL0001"/>

		<!--Error message is prefixed with the keyword
		e.g: "keyword should be in upper case" is the error message
		"ADD" is the keyword
		Message will be displayed as "ADD keyword should be in upper case-->
		<add key="Keywords_UpperCase_ErrMessage" value="keyword should be in upper case"/>
		<add key="Keywords_LowerCase_ErrMessage" value="keyword should be in lower case"/>

		<!--Exception for keywords that are postfixed with some pattern-->
		<add key="Keywords_Exception_Postfix" value="[^\[]*\]"/>


		<!--	Do not modify 'KEY' values till here		-->

		<!--Standards to be ignored-->
		<!--Format of key: standard name should be prefixed with 'Ignore_'
		e.g.: 'Ignore_StandardName'
		-->
		
		<add key="Ignore_MultiLineComments" value="(--.*)|(((/\*)+?[\w\W]+?(\*/)+))"/>
		
		<add key="Ignore_QuotedCode" value="'.*?'"/>

		
        <!--Check the select * state working1-->
		<add key="select_star" value="SELECT+[\n\t\s\.\w]+\*+[\n\t\s]"/>
		<add key="select_star_Check" value="(?i)[\n\t\s]\*"/>
		<add key="select_star_ErrCode" value="SQL0051"/>
		<add key="select_star_ErrMessage" value="Do not use * in select query"/>
		<add key="select_star_Exception" value="COUNT[\n\t\s]+\*+[\n\t\s]" />
		
		
<!--LETS SEE UNION ALL WORKING10-->
		<add key="union_all" value="(EXEC|EXECUTE)+[\n\t\s]+[\w]+[\n\t\s]+UNION+[\n\t\s]+ALL"/>
		<add key="union_all_Check" value="UNION[\n\t\s]+ALL"/>
		<add key="union_all_ErrCode" value="SQL0045"/>
		<add key="union_all_ErrMessage" value="
	Avoid combining multiple queries using UNION ALL in the procedures. Instead load them into a temp table individually and use the temp table for the final select or load
	"/>





		
		<!--Format of the key value pairs for standard check-->
		<!--
		<add key="StandardName" value="Regular_Expression"/>			Regular Expression to identify set of standards
		<add key="StandardName_Check" value="Regular_Expression"/>		Regular Expression to identify set of standards + standards to be followed
		<add key="StandardName_ErrCode" value="Error_Code"/>			Error Code to be printed on output window
		<add key="StandardName_ErrMessage" value="Error_Message"/>		Error Message to be printed on output window
		<add key="StandardName_Exception" value="Regular_Expression"/>	Exceptions for the keywords identified
		<add key="StandardName_AdditionalConstraint" values="Regular_Expression" />  This is additional constraint specific to file. e.g. Stored procedure specific to front end
		-->

		<!--Variable Naming Convention-->
		<add key="Variable_NamingConvention" value="@[\w\d_@]*" />
		<add key="Variable_NamingConvention_Check" value="@[p]?(?-i)[A-Z](?i)[A-Za-z0-9_]*" />
		<add key="Variable_NamingConvention_ErrCode" value="SQL0002" />
		<add key="Variable_NamingConvention_ErrMessage" value="Follow Pascal case for variable names" />
		<add key="Variable_NamingConvention_Exception" value="@@[\w\d_]+"/>

		<!--Spaces in Table/View/Procedure name-->
		<add key="ObjectName_Space" value="(CREATE|ALTER)[\s\t\n]+(TABLE|VIEW)[\s\t\n]*((\[[\w\d_]*[\s]+[\w\d\s_]*\])|(\[?[\w\d_]*\]?\.\[[\w\d_]*[\s]+[\w\d\s_]*\])|(\[?[\w\d_]*\]?\.\[?[\w\d_]*\]?\.\[[\w\d_]*[\s]+[\w\d\s_]*\]))([\s\t\n]|(\()|AS)"/>
		<add key="ObjectName_Space_Check" value="NULL"/>
		<add key="ObjectName_Space_ErrCode" value="SQL0003"/>
		<add key="ObjectName_Space_ErrMessage" value="Spaces are not allowed in TABLE/VIEW/ names"/>

		<!--Table Naming Convention-->
		<add key="Table_NamingConvention" value="(CREATE|ALTER)[\s\t\n]+TABLE[\s\t\n]+" />
		<add key="Table_NamingConvention_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+TABLE[\s\t\n]+(?-i)(((\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[[#]?[A-Z][\w\d_]*\]|[#]?[A-Z][\w\d_]*))|((\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[[#]?[A-Z][\w\d_]*\]|[#]?[A-Z][\w\d_]*))|(\[[#]?[A-Z][\w\d_]*\]|[#]?[A-Z][\w\d_]*))[\s\t\n\(]+" />
		<add key="Table_NamingConvention_ErrCode" value="SQL0004" />
		<add key="Table_NamingConvention_ErrMessage" value="Follow Pascal case for table names" />

		<!--View Naming Convention-->
		<add key="View_NamingConvention" value="(CREATE|ALTER)[\s\t\n]+VIEW[\s\t\n]+" />
		<add key="View_NamingConvention_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+VIEW[\s\t\n]+(?-i)(((\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[(vw|vw_)[A-Z][\w\d_]*\]|(vw|vw_)[A-Z][\w\d_]*))|((\[[\w\s\d_\.]*\]|[\d\w_]*)\.(\[(vw|vw_)[A-Z][\w\d_]*\]|(vw|vw_)[A-Z][\w\d_]*))|(\[(vw|vw_)[A-Z][\w\d_]*\]|(vw|vw_)[A-Z][\w\d_]*))[\s\t\n]*" />
		<add key="View_NamingConvention_ErrCode" value="SQL0005" />
		<add key="View_NamingConvention_ErrMessage" value="Follow Pascal case for view names" />

		<!--Stored Procedure Naming Convention-->
		<add key="StoredProcedure_NamingConvention" value="(CREATE|ALTER)[\s\t\n]+PROCEDURE[\s\t\n]+" />
		<add key="StoredProcedure_NamingConvention_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+PROCEDURE[\s\t\n]+\[?\w*\]?\.?\[?\w*\]?\.?\[?(?-i)(usp|usp_)(_[A-Z][A-Za-z0-9_]*_Update|_G(?i)et_(?-i)[A-Z][A-Za-z0-9_]*|[A-Z][A-Za-z0-9_]*)\]?[\s\t\n\(]+" />
		<add key="StoredProcedure_NamingConvention_ErrCode" value="SQL0006" />
		<add key="StoredProcedure_NamingConvention_ErrMessage" value="Follow Pascal case for stored procedure names" />

		
		
        
		<!--PRIMARY KEY on DATA File group
		<add key="PrimaryKey_FileGroup" value="CONSTRAINT([\s\t\n]*\[[\s\w\d_]*\][\s\t\n]*|[\s\t\n]+[\w\d_]+[\s\t\n]+)PRIMARY[\s\t\n]+KEY[\s\t\n]+(CLUSTERED)?"/>
		<add key="PrimaryKey_FileGroup_Check" value="(?i)CONSTRAINT([\s\t\n]*\[[\s\w\d_]*\][\s\t\n]*|[\s\t\n]+[\w\d_]+[\s\t\n]+)PRIMARY[\s\t\n]+KEY[\s\t\n]+(CLUSTERED)?[\s\t\n]*\([\w\d\[\]_,\s\t\n]*?\)[\s\t\n]*(WITH[\s\t\n]*\([\d\w\s\t=,]*\))?[\s\t\n]*ON([\s\t\n]*\[DATA\]|[\s\t\n]+DATA)"/>
		<add key="PrimaryKey_FileGroup_ErrCode" value="SQL0016"/>
		<add key="PrimaryKey_FileGroup_ErrMessage" value="PRIMARY KEY should be created on DATA File Group"/>
		<add key="PrimaryKey_FileGroup_Exception" value="CONSTRAINT([\s\t\n]*\[[\s\w\d_]*\][\s\t\n]*|[\s\t\n]+[\w\d_]+[\s\t\n]+)PRIMARY[\s\t\n]+KEY[\s\t\n]+NONCLUSTERED"/> -->

		<!--Clustered Index on DATA File Group
		<add key="ClusteredIndex_FileGroup" value="(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?CLUSTERED[\s\t\n]+INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\("/>
		<add key="ClusteredIndex_FileGroup_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?CLUSTERED[\s\t\n]+INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\([\w\W]*\)[\s\t\n]*(WITH[\s\t\n]*\([\d\w\s\t=,]*\))?[\s\t\n]*ON([\s\t\n]*\[DATA\]|[\s\t\n]+DATA)"/>
		<add key="ClusteredIndex_FileGroup_ErrCode" value="SQL0017"/>
		<add key="ClusteredIndex_FileGroup_ErrMessage" value="CLUSTERED INDEX should be created on DATA File Group"/> -->

		<!--Non Clustered Index on INDEX File Group
		<add key="NonClusteredIndex_FileGroup" value="(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?(NONCLUSTERED[\s\t\n]+)?(COLUMNSTORE[\s\t\n]*)?INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\(" />
		<add key="NonClusteredIndex_FileGroup_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?(NONCLUSTERED[\s\t\n]+)?(COLUMNSTORE[\s\t\n]*)?INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\([\w\W]*\)[\s\t\n]*(INCLUDE[\s\t\n]*\([\w\W]*\)[\s\t\n]*)?[\s\t\n]*ON([\s\t\n]*\[INDEX\]|[\s\t\n]+INDEX)"/>
		<add key="NonClusteredIndex_FileGroup_ErrCode" value="SQL0018"/>
		<add key="NonClusteredIndex_FileGroup_ErrMessage" value="NON CLUSTERED INDEX should be created on INDEX File Group"/> -->

		<!--Data_Compression flag for indexes 
		<add key="DataCompression_Flag" value="(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?(NONCLUSTERED[\s\t\n]+|CLUSTERED[\s\t\n]+)?INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\("/>
		<add key="DataCompression_Flag_Check" value="(?i)(CREATE|ALTER)[\s\t\n]+(UNIQUE[\s\t\n]*)?(NONCLUSTERED[\s\t\n]+|CLUSTERED[\s\t\n]+)?INDEX[\s\t\n]*[\w\d_\[\]]*[\s\t\n]*ON[\s\t\n]+([^#]|\[[^#])[\w\d_\[\]\.]*[\s\t\n]*\([\w\d\[\],\s\t\n_]*\)[\s\t\n]*(INCLUDE[\s\t\n]*\([\w\d\[\],\s\t\n_]*\)[\s\t\n]*)?[\s\t\n]*WITH[\s\t\n]*\([\s\t\n]*DATA_COMPRESSION[\s\t\n]*=[\s\t\n]*PAGE[\s\t\n]*\)"/>
		<add key="DataCompression_Flag_ErrCode" value="SQL0019"/>
		<add key="DataCompression_Flag_ErrMessage" value="Either DATA_COMPRESSION = PAGE flag is missing or you have used flags other than DATA_COMPRESSION = PAGE for Indexes"/> -->

		<!--Locking Options-->
		<!--FROM clause WITH (TABLOCK)
		<add key="FROM_Tablock" value="(SELECT|DELETE)[\w\d_,=\s\t\n\[\]\*@\-\.\#\(\)]*?FROM[\s\t\n]+(\[?[\w\d_]+\]?\.(\[[^s][\w\d_]*|[^s\[][\w\d_]*|s[^y][\w\d_]*|\[s[^y][\w\d_]*|sy[^s]|\[sy[^s]|sys[\w\d_]+|\[sys[\w\d_]+)\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[[^s][\w\d_]*|[^s\[][\w\d_]*|s[^y][\w\d_]*|\[s[^y][\w\d_]*|sy[^s]|\[sy[^s]|sys[\w\d_]+|\[sys[\w\d_]+)\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[v[^w]|\[[^v#@][\w\d_]|v[^w]|[^v#\[@][\w\d_])[\w\d_]*\]?)[\s\t\n]+" />
		<add key="FROM_Tablock_Check" value="(?i)(SELECT|DELETE)[\w\d_,=\s\t\n\[\]\*@\-\.\#\(\)]*?FROM[\s\t\n]+(\[?[\w\d_]+\]?\.(\[[^s][\w\d_]*|[^s\[][\w\d_]*|s[^y][\w\d_]*|\[s[^y][\w\d_]*|sy[^s]|\[sy[^s]|sys[\w\d_]+|\[sys[\w\d_]+)\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[[^s][\w\d_]*|[^s\[][\w\d_]*|s[^y][\w\d_]*|\[s[^y][\w\d_]*|sy[^s]|\[sy[^s]|sys[\w\d_]+|\[sys[\w\d_]+)\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[v[^w]|\[[^v#@][\w\d_]|v[^w]|[^v#\[@][\w\d_])[\w\d_]*\]?)(?i)[\s\t\n]+(\[?AS\]?[\s\t\n]+)?\[?[\d\w_]*\]?[\s\t\n]*WITH[\s\t\n]*\([\s\t\n]*(TABLOCK)[\s\t\n]*\)" />
		<add key="FROM_Tablock_ErrCode" value="SQL0020" />
		<add key="FROM_Tablock_ErrMessage" value="Use WITH (TABLOCK) for selecting or deleting rows from a table" />
		<add key="FROM_Tablock_Exception" value="(?i)(SELECT)[\w\d_,=\s\t\n\[\]\*@\-\.\#\(\)]*?FROM[\s\t\n]+(\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?(sys)[\w\d_]*\]?)[\s\t\n]+" />
		<add key="FROM_Tablock_AdditionalConstraint" value="(?i)CREATE[\s\t\n]+PROCEDURE[\s\t\n]*((\[?[\w\d_]+\]?\.\[?(?!(rpt))[\w\d_]*\]?\.\[?[\w\d_]+\]?)|(\[?(?!(rpt))[\w\d_]*\]?\.\[?[\w\d_]+\]?))[\s\t\n]*\("/> -->

		<!--JOIN statement WITH (TABLOCK)
		<add key="JOIN_Tablock" value="[\s\t\n]JOIN[\s\t\n]+(\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|\[?[\w\d_]+\]?\.(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?)[\s\t\n]+" />
		<add key="JOIN_Tablock_Check" value="[\s\t\n](?i)JOIN[\s\t\n]+(\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.(?-i)(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(?i)\[?[\w\d_]+\]?\.(?-i)(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?|(\[v[^w]|\[[^v#][\w\d_]|v[^w]|[^v#\[][\w\d_])[\w\d_]*\]?)[\s\t\n]+(?i)(\[?AS\]?[\s\t\n]+)?\[?[\d\w_]*\]?[\s\t\n]*(WITH)?[\s\t\n]*\([\s\t\n]*(TABLOCK)[\s\t\n]*\)" />
		<add key="JOIN_Tablock_ErrCode" value="SQL0021" />
		<add key="JOIN_Tablock_ErrMessage" value="Use WITH (TABLOCK) in JOIN conditions" />
		<add key="JOIN_Tablock_Exception" value="(([\s\t\n]JOIN[\s\t\n]+(\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?(sys)[\w\d_]*\]?)[\s\t\n]+)|([\s\t\n]JOIN[\s\t\n]*\([\s\t\n]*SELECT[\s\t\n]+))" />
		<add key="JOIN_Tablock_AdditionalConstraint" value="(?i)CREATE[\s\t\n]+PROCEDURE[\s\t\n]*((\[?[\w\d_]+\]?\.\[?(?!(rpt))[\w\d_]*\]?\.\[?[\w\d_]+\]?)|(\[?(?!(rpt))[\w\d_]*\]?\.\[?[\w\d_]+\]?))[\s\t\n]*\("/>-->
		

		
		<!--Sub queries in JOIN statement-->
		<add key="SubQuery_In_JOIN_Statement" value="[\s\t\n]JOIN[\s\t\n]*\([\s\t\n]*SELECT"/>
		<add key="SubQuery_In_JOIN_Statement_Check" value="NULL"/>
		<add key="SubQuery_In_JOIN_Statement_ErrCode" value="SQL0028"/>
		<add key="SubQuery_In_JOIN_Statement_ErrMessage" value="Avoid use of sub queries in JOIN statements"/>

		<!--Sub queries in WHERE clause-->
		<add key="SubQuery_In_WHERE_Clause" value="[\s\t\n](((WHERE|AND|OR)[\s\t\n]+[\[\]\.\w\d\s]*[\s\t\n]*(=|&lt;=|&gt;=|!=|&lt;&gt;|&lt;|&gt;|IN|BETWEEN|&amp;|\||EXISTS|LIKE|NOT|SOME|ANY|ALL|IS)[\s\t\n]+\([\s\t\n]*SELECT[\w\d_,=\s\t\n\[\]]*FROM)|(WHERE|AND|OR)[\s\t\n]+\([\s\t\n]*SELECT[\w\d_,=\s\t\n\[\]]*FROM)"/>
		<add key="SubQuery_In_WHERE_Clause_Check" value="NULL" />
		<add key="SubQuery_In_WHERE_Clause_ErrCode" value="SQL0029" />
		<add key="SubQuery_In_WHERE_Clause_ErrMessage" value="Avoid use of sub queries in WHERE clause" />

		
		<!--Provide table alias-->
		<add key="Table_Alias_FROM" value="[\s\t\n]FROM[\s\t\n]+[\[\]#\w\d_\.]+([\s\t\n]+|\))"/>
		<add key="Table_Alias_FROM_Check" value="(?i)[\s\t\n]FROM[\s\t\n]+[\[\]#\w\d_\.]+[\s\t\n]+(AS|\[AS\])?[\s\t\n]*\[?(?!(with|where|\)))[\w\d_]+\]?"/>
		<add key="Table_Alias_FROM_ErrCode" value="SQL0032"/>
		<add key="Table_Alias_FROM_ErrMessage" value="Provide table aliases and refer to column names using table alias"/>
		<add key="Table_Alias_FROM_Exception" value="[\s\t\n]FROM[\s\t\n]+(((\[?[\w\d_]+\]?\.\[?(sys)\]?\.\[?[\w\d_]*\]?|\[?(sys)\]?\.\[?[\w\d_]*\]?)([\s\t\n]+|\)))|((\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?(sys)[\w\d_]*\]?)([\s\t\n]+|\))))"/>

		<add key="Table_Alias_JOIN" value="(?i)[\s\t\n]JOIN[\s\t\n]+[\[\]#\w\d_\.]+[\s\t\n]+"/>
		<add key="Table_Alias_JOIN_Check" value="(?i)[\s\t\n]JOIN[\s\t\n]+[\[\]#\w\d_\.]+[\s\t\n]+(AS|\[AS\])?[\s\t\n]*\[?(?!(on|with))[\w\d_]+\]?"/>
		<add key="Table_Alias_JOIN_ErrCode" value="SQL0032"/>
		<add key="Table_Alias_JOIN_ErrMessage" value="Provide table aliases and refer to column names using table alias"/>
		<add key="Table_Alias_JOIN_Exception" value="(?i)[\s\t\n]JOIN[\s\t\n]+(((\[?[\w\d_]+\]?\.\[?(sys)\]?\.\[?[\w\d_]*\]?|\[?(sys)\]?\.\[?[\w\d_]*\]?)[\s\t\n]+)|((\[?[\w\d_]+\]?\.\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?[\w\d_]+\]?\.\[?(sys)[\w\d_]*\]?|\[?(sys)[\w\d_]*\]?)[\s\t\n]+))"/>

		

	</appSettings>
</configuration>